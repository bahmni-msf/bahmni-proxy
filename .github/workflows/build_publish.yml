name: Build and Publish
on:
  push:
    branches:
      - [ocp-bahmni-lite]

jobs:
  docker-build-publish:
    name: Docker Build & Publish
    runs-on: ubuntu-latest
    steps:
      - name: Pull Github code
        uses: actions/checkout@v4
      - name: Build docker image
        run: docker build -t proxy:latest -f Dockerfile .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'proxy:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          trivyignores: ./.trivyignore
          skip-files: /etc/tls/key.pem
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.BAHMNI_LITE_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.BAHMNI_LITE_AWS_SECRET_KEY }}
          aws-region: ${{ secrets.BAHMNI_LITE_AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Set Image tag varaible
        run: echo "ARTIFACT_VERSION=$(cat package/.appversion)-$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
      - name: Tag and Push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: bahmni-msf-lite/proxy
          IMAGE_TAG: ${{ env.ARTIFACT_VERSION }}
        run: |
          docker tag proxy:latest $REGISTRY/$REPOSITORY:latest
          docker tag proxy:latest $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:latest